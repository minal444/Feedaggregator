#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BollywoodGossip")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFeed(Feed instance);
    partial void UpdateFeed(Feed instance);
    partial void DeleteFeed(Feed instance);
    partial void InsertFeedsMapping(FeedsMapping instance);
    partial void UpdateFeedsMapping(FeedsMapping instance);
    partial void DeleteFeedsMapping(FeedsMapping instance);
    partial void InsertFeedSource(FeedSource instance);
    partial void UpdateFeedSource(FeedSource instance);
    partial void DeleteFeedSource(FeedSource instance);
    #endregion
		
		public DBDataContext() : 
				base(global::WindowsFormsApplication1.Properties.Settings.Default.BollywoodGossipConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Feed> Feeds
		{
			get
			{
				return this.GetTable<Feed>();
			}
		}
		
		public System.Data.Linq.Table<FeedsMapping> FeedsMappings
		{
			get
			{
				return this.GetTable<FeedsMapping>();
			}
		}
		
		public System.Data.Linq.Table<FeedSource> FeedSources
		{
			get
			{
				return this.GetTable<FeedSource>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feeds")]
	public partial class Feed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FeedID;
		
		private string _Title;
		
		private string _Description;
		
		private string _ImageURL;
		
		private System.Nullable<System.DateTime> _PublishDate;
		
		private string _RedirectURL;
		
		private System.Nullable<int> _Source;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _SourceXML;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _UTCPublishDate;
		
		private EntitySet<FeedsMapping> _FeedsMappings;
		
		private EntitySet<FeedsMapping> _FeedsMappings1;
		
		private EntityRef<FeedSource> _FeedSource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedIDChanging(long value);
    partial void OnFeedIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnRedirectURLChanging(string value);
    partial void OnRedirectURLChanged();
    partial void OnSourceChanging(System.Nullable<int> value);
    partial void OnSourceChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnSourceXMLChanging(string value);
    partial void OnSourceXMLChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUTCPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUTCPublishDateChanged();
    #endregion
		
		public Feed()
		{
			this._FeedsMappings = new EntitySet<FeedsMapping>(new Action<FeedsMapping>(this.attach_FeedsMappings), new Action<FeedsMapping>(this.detach_FeedsMappings));
			this._FeedsMappings1 = new EntitySet<FeedsMapping>(new Action<FeedsMapping>(this.attach_FeedsMappings1), new Action<FeedsMapping>(this.detach_FeedsMappings1));
			this._FeedSource = default(EntityRef<FeedSource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long FeedID
		{
			get
			{
				return this._FeedID;
			}
			set
			{
				if ((this._FeedID != value))
				{
					this.OnFeedIDChanging(value);
					this.SendPropertyChanging();
					this._FeedID = value;
					this.SendPropertyChanged("FeedID");
					this.OnFeedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="VarChar(MAX)")]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedirectURL", DbType="VarChar(MAX)")]
		public string RedirectURL
		{
			get
			{
				return this._RedirectURL;
			}
			set
			{
				if ((this._RedirectURL != value))
				{
					this.OnRedirectURLChanging(value);
					this.SendPropertyChanging();
					this._RedirectURL = value;
					this.SendPropertyChanged("RedirectURL");
					this.OnRedirectURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Int")]
		public System.Nullable<int> Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					if (this._FeedSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceXML", DbType="VarChar(MAX)")]
		public string SourceXML
		{
			get
			{
				return this._SourceXML;
			}
			set
			{
				if ((this._SourceXML != value))
				{
					this.OnSourceXMLChanging(value);
					this.SendPropertyChanging();
					this._SourceXML = value;
					this.SendPropertyChanged("SourceXML");
					this.OnSourceXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTCPublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UTCPublishDate
		{
			get
			{
				return this._UTCPublishDate;
			}
			set
			{
				if ((this._UTCPublishDate != value))
				{
					this.OnUTCPublishDateChanging(value);
					this.SendPropertyChanging();
					this._UTCPublishDate = value;
					this.SendPropertyChanged("UTCPublishDate");
					this.OnUTCPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feed_FeedsMapping", Storage="_FeedsMappings", ThisKey="FeedID", OtherKey="FeedID")]
		public EntitySet<FeedsMapping> FeedsMappings
		{
			get
			{
				return this._FeedsMappings;
			}
			set
			{
				this._FeedsMappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feed_FeedsMapping1", Storage="_FeedsMappings1", ThisKey="FeedID", OtherKey="ReletedFeedID")]
		public EntitySet<FeedsMapping> FeedsMappings1
		{
			get
			{
				return this._FeedsMappings1;
			}
			set
			{
				this._FeedsMappings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeedSource_Feed", Storage="_FeedSource", ThisKey="Source", OtherKey="FeedSourceID", IsForeignKey=true)]
		public FeedSource FeedSource
		{
			get
			{
				return this._FeedSource.Entity;
			}
			set
			{
				FeedSource previousValue = this._FeedSource.Entity;
				if (((previousValue != value) 
							|| (this._FeedSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FeedSource.Entity = null;
						previousValue.Feeds.Remove(this);
					}
					this._FeedSource.Entity = value;
					if ((value != null))
					{
						value.Feeds.Add(this);
						this._Source = value.FeedSourceID;
					}
					else
					{
						this._Source = default(Nullable<int>);
					}
					this.SendPropertyChanged("FeedSource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FeedsMappings(FeedsMapping entity)
		{
			this.SendPropertyChanging();
			entity.Feed = this;
		}
		
		private void detach_FeedsMappings(FeedsMapping entity)
		{
			this.SendPropertyChanging();
			entity.Feed = null;
		}
		
		private void attach_FeedsMappings1(FeedsMapping entity)
		{
			this.SendPropertyChanging();
			entity.Feed1 = this;
		}
		
		private void detach_FeedsMappings1(FeedsMapping entity)
		{
			this.SendPropertyChanging();
			entity.Feed1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeedsMapping")]
	public partial class FeedsMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeedsMappingID;
		
		private long _FeedID;
		
		private long _ReletedFeedID;
		
		private EntityRef<Feed> _Feed;
		
		private EntityRef<Feed> _Feed1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedsMappingIDChanging(int value);
    partial void OnFeedsMappingIDChanged();
    partial void OnFeedIDChanging(long value);
    partial void OnFeedIDChanged();
    partial void OnReletedFeedIDChanging(long value);
    partial void OnReletedFeedIDChanged();
    #endregion
		
		public FeedsMapping()
		{
			this._Feed = default(EntityRef<Feed>);
			this._Feed1 = default(EntityRef<Feed>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedsMappingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeedsMappingID
		{
			get
			{
				return this._FeedsMappingID;
			}
			set
			{
				if ((this._FeedsMappingID != value))
				{
					this.OnFeedsMappingIDChanging(value);
					this.SendPropertyChanging();
					this._FeedsMappingID = value;
					this.SendPropertyChanged("FeedsMappingID");
					this.OnFeedsMappingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedID", DbType="BigInt NOT NULL")]
		public long FeedID
		{
			get
			{
				return this._FeedID;
			}
			set
			{
				if ((this._FeedID != value))
				{
					if (this._Feed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFeedIDChanging(value);
					this.SendPropertyChanging();
					this._FeedID = value;
					this.SendPropertyChanged("FeedID");
					this.OnFeedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReletedFeedID", DbType="BigInt NOT NULL")]
		public long ReletedFeedID
		{
			get
			{
				return this._ReletedFeedID;
			}
			set
			{
				if ((this._ReletedFeedID != value))
				{
					if (this._Feed1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReletedFeedIDChanging(value);
					this.SendPropertyChanging();
					this._ReletedFeedID = value;
					this.SendPropertyChanged("ReletedFeedID");
					this.OnReletedFeedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feed_FeedsMapping", Storage="_Feed", ThisKey="FeedID", OtherKey="FeedID", IsForeignKey=true)]
		public Feed Feed
		{
			get
			{
				return this._Feed.Entity;
			}
			set
			{
				Feed previousValue = this._Feed.Entity;
				if (((previousValue != value) 
							|| (this._Feed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Feed.Entity = null;
						previousValue.FeedsMappings.Remove(this);
					}
					this._Feed.Entity = value;
					if ((value != null))
					{
						value.FeedsMappings.Add(this);
						this._FeedID = value.FeedID;
					}
					else
					{
						this._FeedID = default(long);
					}
					this.SendPropertyChanged("Feed");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feed_FeedsMapping1", Storage="_Feed1", ThisKey="ReletedFeedID", OtherKey="FeedID", IsForeignKey=true)]
		public Feed Feed1
		{
			get
			{
				return this._Feed1.Entity;
			}
			set
			{
				Feed previousValue = this._Feed1.Entity;
				if (((previousValue != value) 
							|| (this._Feed1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Feed1.Entity = null;
						previousValue.FeedsMappings1.Remove(this);
					}
					this._Feed1.Entity = value;
					if ((value != null))
					{
						value.FeedsMappings1.Add(this);
						this._ReletedFeedID = value.FeedID;
					}
					else
					{
						this._ReletedFeedID = default(long);
					}
					this.SendPropertyChanged("Feed1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FeedSource")]
	public partial class FeedSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeedSourceID;
		
		private string _SourceName;
		
		private string _SourceURL;
		
		private bool _Active;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _SiteURL;
		
		private string _LogoURL;
		
		private string _Imagesource;
		
		private string _ImageNameSpace;
		
		private string _DescriptionNameSpace;
		
		private string _Timezone;
		
		private EntitySet<Feed> _Feeds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedSourceIDChanging(int value);
    partial void OnFeedSourceIDChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnSourceURLChanging(string value);
    partial void OnSourceURLChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnSiteURLChanging(string value);
    partial void OnSiteURLChanged();
    partial void OnLogoURLChanging(string value);
    partial void OnLogoURLChanged();
    partial void OnImagesourceChanging(string value);
    partial void OnImagesourceChanged();
    partial void OnImageNameSpaceChanging(string value);
    partial void OnImageNameSpaceChanged();
    partial void OnDescriptionNameSpaceChanging(string value);
    partial void OnDescriptionNameSpaceChanged();
    partial void OnTimezoneChanging(string value);
    partial void OnTimezoneChanged();
    #endregion
		
		public FeedSource()
		{
			this._Feeds = new EntitySet<Feed>(new Action<Feed>(this.attach_Feeds), new Action<Feed>(this.detach_Feeds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedSourceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FeedSourceID
		{
			get
			{
				return this._FeedSourceID;
			}
			set
			{
				if ((this._FeedSourceID != value))
				{
					this.OnFeedSourceIDChanging(value);
					this.SendPropertyChanging();
					this._FeedSourceID = value;
					this.SendPropertyChanged("FeedSourceID");
					this.OnFeedSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceURL", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string SourceURL
		{
			get
			{
				return this._SourceURL;
			}
			set
			{
				if ((this._SourceURL != value))
				{
					this.OnSourceURLChanging(value);
					this.SendPropertyChanging();
					this._SourceURL = value;
					this.SendPropertyChanged("SourceURL");
					this.OnSourceURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="VarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteURL", DbType="VarChar(1000)")]
		public string SiteURL
		{
			get
			{
				return this._SiteURL;
			}
			set
			{
				if ((this._SiteURL != value))
				{
					this.OnSiteURLChanging(value);
					this.SendPropertyChanging();
					this._SiteURL = value;
					this.SendPropertyChanged("SiteURL");
					this.OnSiteURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoURL", DbType="VarChar(1000)")]
		public string LogoURL
		{
			get
			{
				return this._LogoURL;
			}
			set
			{
				if ((this._LogoURL != value))
				{
					this.OnLogoURLChanging(value);
					this.SendPropertyChanging();
					this._LogoURL = value;
					this.SendPropertyChanged("LogoURL");
					this.OnLogoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagesource", DbType="VarChar(100)")]
		public string Imagesource
		{
			get
			{
				return this._Imagesource;
			}
			set
			{
				if ((this._Imagesource != value))
				{
					this.OnImagesourceChanging(value);
					this.SendPropertyChanging();
					this._Imagesource = value;
					this.SendPropertyChanged("Imagesource");
					this.OnImagesourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageNameSpace", DbType="VarChar(1000)")]
		public string ImageNameSpace
		{
			get
			{
				return this._ImageNameSpace;
			}
			set
			{
				if ((this._ImageNameSpace != value))
				{
					this.OnImageNameSpaceChanging(value);
					this.SendPropertyChanging();
					this._ImageNameSpace = value;
					this.SendPropertyChanged("ImageNameSpace");
					this.OnImageNameSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionNameSpace", DbType="VarChar(500)")]
		public string DescriptionNameSpace
		{
			get
			{
				return this._DescriptionNameSpace;
			}
			set
			{
				if ((this._DescriptionNameSpace != value))
				{
					this.OnDescriptionNameSpaceChanging(value);
					this.SendPropertyChanging();
					this._DescriptionNameSpace = value;
					this.SendPropertyChanged("DescriptionNameSpace");
					this.OnDescriptionNameSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timezone", DbType="VarChar(50)")]
		public string Timezone
		{
			get
			{
				return this._Timezone;
			}
			set
			{
				if ((this._Timezone != value))
				{
					this.OnTimezoneChanging(value);
					this.SendPropertyChanging();
					this._Timezone = value;
					this.SendPropertyChanged("Timezone");
					this.OnTimezoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FeedSource_Feed", Storage="_Feeds", ThisKey="FeedSourceID", OtherKey="Source")]
		public EntitySet<Feed> Feeds
		{
			get
			{
				return this._Feeds;
			}
			set
			{
				this._Feeds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feeds(Feed entity)
		{
			this.SendPropertyChanging();
			entity.FeedSource = this;
		}
		
		private void detach_Feeds(Feed entity)
		{
			this.SendPropertyChanging();
			entity.FeedSource = null;
		}
	}
}
#pragma warning restore 1591
